# -- coding: utf-8 --

# 引用计数增加  example

x = 3.14  # 对象被创建 引用计数为1
y= x	# 又被赋值给其它变量  计数+1

def test(x):
	pass
	
test(x) # 当变量传给函数  计数+1
mylist = [1,2,x] # 成为容器的对象 计数+1

# 引用计数减少
'''
1.变量离开作用域,引用计数减少
2.当变量被赋值另一个对象,原来对象的引用计数会减
	f = 'xxx'
	b = f
	foo = 123   # 这里 'xxx'的引用计数减少
3.对象的别名被显式的销毁。
del y # or del x
 
4.del myList  存放变量的集合被销毁  # 这里del作用:x引用计数-1,名字空间中删除myList

'''

# 垃圾回收 （当引用为0时,解释器会暂停去清理该对象）
'''
	找引用计 数为 0 的对象
	检查引用计数大于0但也应该被销毁的对象
	垃圾收集器也会留心被分配内存总量很大
	
'''